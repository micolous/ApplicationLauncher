[ApplicationLauncher]
; ConfigVersion is if we have version-incompatible revisions to the
; configuration file format, say, if a attribute gets a new meaning.
ConfigVersion = 1

; The path to the banner image.  GDI+ is used so BMP, GIF, JPEG, PNG should
; all work.  Avoid transparent images.
;
; This path is relative to the configuration file's location.
BannerImage = examplebanner.png

; HTML-style colour names here.  So you can write 'red', as well.  CSS style
; short colour names (eg: #fff) probably won't work.
BgColour = #000000
FgColour = #ffffff

MenuBgColour = #000000
MenuFgColour = #ffffff

; RichTextBoxes don't have a 2D-field mode, only 3D or off.  So it's a bit odd.
DrawBorders = false
;DrawBorders2D = false

; What to do when exiting.
; This will also be done if the program is crashing.
; This should be set to one of the following:
;   - n:  don't do anything on exit (default)
;   - l:  logout on exit
;   - f:  force logout (kill all apps) on exit
;   - r:  reboot on exit
;   - s:  shutdown on exit
ActionOnLogout = n

; This disables the "waiting" prompt when shutting down the computer.  It'll
; wait for the timeout, and IMMEDIATELY kill the process if it's not
; responding, rather than prompting the user.
;
; This defaults to false.  It has no effect if "ActionOnLogout = n".
ForceShutdownIfHung = false

; When you're testing, you may want to disable window maximisation.
; By default, this is true (ie: all windows are maximised).
MaximiseWindows = false

; Password to unlock (and launch explorer).  Click the clock to show unlock 
; dialogue.  Disabled if not set.  Should be no longer than 50 characters.
UnlockPassword = cisc0

; You can also customise the formatting of the clock shown on screen.
; By default, this will show the default "short" time format in the text,
; and the "long" date format in the tooltip, obeying your regional settings.
;
; You can override this behaviour here, using the same formatting codes
; that you would normally use in that dialogue.  The clock will always
; be shown in your local language and calendar.
;
ClockFormat = dddd, HH:mm
ClockFormatTooltip = dd MMMM yyyy


; Useful for testing when you have applauncher set as your shell
[app.explorer]
name = Windows Explorer
exec = c:\windows\explorer.exe


; Some windows games.
;
; You will need to change the path to 'c:\windows\' for the Windows games in
; win98/me.
; You will need to change the path to 'c:\winnt\system32\' (or something) for
; the Windows games in win2000, or 'c:\windows\system32\' in Windows XP.
;
; For copyright reasons, icons have not been included.  You'll need to extract
; them manually as currently the software does not support extracting them for
; you.  If it fails to load the icon specified, it'll put a red X in it's place.

; Attributes starting with an underscore (_) are additional metadata, such as
; the name of the publisher.  You can enter anything you like for it.
;
; For the 'desc' (description) field, a pipe symbol (|) is converted to a new
; line character sequence.
[app.sol]
name = Windows Solitaire
icon = icons\sol.png
exec = c:\program files\microsoft games\solitaire\solitaire.exe
_Programmer = Wes Cherry
_Artwork = Susan Kare
_Publisher = Microsoft Corporation
_Year = 1989
desc = Solitaire is a card game that is included in most versions of Microsoft Windows. It is a version of Klondike, a specific variant of solitaire.||Microsoft has included the game as part of the Windows operating system since Windows 3.0, starting from 1990. The game was developed in 1989 by then intern Wes Cherry, who famously received no royalties from his work. The card deck itself was designed by Macintosh pioneer Susan Kare.||Productivity in business lost by employees playing Solitaire has become a common concern since it became standard on Microsoft Windows.

[app.winmine]
name = Windows Minesweeper
icon = icons\winmine.png
exec = c:\program files\microsoft games\minesweeper\minesweeper.exe
_Programmers = Robert Donner & Curt Johnson
_Publisher = Microsoft Corporation
_Year = 1992
desc = Minesweeper is a computer game of minesweeper included in Microsoft Windows. It was first included in Windows 3.1 and originally credited to Robert Donner and Curt Johnson.||The goal of the game is to uncover the mines (by flagging them with the right mouse button) without being 'destroyed' by clicking on a mine with the left mouse button. Mines are discovered by clicking on the game board revealing a grid of numbers, each number being the number of mines nearby the point clicked.
